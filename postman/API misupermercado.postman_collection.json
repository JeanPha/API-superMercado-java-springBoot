{
	"info": {
		"_postman_id": "1ab210a8-7f41-46f9-8a54-758b647fc7e3",
		"name": "API misupermercado",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" width=\"2162\" height=\"1530\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37548194"
	},
	"item": [
		{
			"name": "Api Clientes",
			"item": [
				{
					"name": "Por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/clientes/1",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes",
								"1"
							]
						},
						"description": "This endpoint retrieves the details of a specific client with the ID 6. The response for this request follows a JSON schema as shown below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id_cliente\": {\n      \"type\": \"integer\"\n    },\n    \"apellidoNombre\": {\n      \"type\": \"string\"\n    },\n    \"dni\": {\n      \"type\": \"string\"\n    },\n    \"fechaNacimiento\": {\n      \"type\": \"string\"\n    },\n    \"correoElectronico\": {\n      \"type\": \"string\"\n    },\n    \"contrasena\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apellidoNombre\": \"{{$randomFullName}}\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00\",\n    \"correoElectronico\": \"{{$randomEmail}}\"\n}\n\n\n\n\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/clientes",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "clientes",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"apellidoNombre\": \"{{$randomFullName}}\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00\",\n    \"correoElectronico\": \"{{$randomEmail}}\"\n}\n\n\n\n\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/api/clientes",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"clientes"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Nov 2024 03:42:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id_cliente\": 3,\n    \"apellidoNombre\": \"Alberta Wolf\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00.000+00:00\",\n    \"correoElectronico\": \"Dorthy.Goodwin30@yahoo.com\"\n}"
						}
					]
				},
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id_cliente\": 3,\n    \"apellidoNombre\": \"Alberta Wolf\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00.000+00:00\",\n    \"correoElectronico\": \"Dorthy.Goodwin30@yahoo.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/clientes/3",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes",
								"3"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "clientes",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id_cliente\": 3,\n    \"apellidoNombre\": \"Alberta Wolf\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00.000+00:00\",\n    \"correoElectronico\": \"Dorthy.Goodwin30@yahoo.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/api/clientes/3",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"clientes",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Nov 2024 03:44:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id_cliente\": 3,\n    \"apellidoNombre\": \"Alberta Wolf\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00.000+00:00\",\n    \"correoElectronico\": \"Dorthy.Goodwin30@yahoo.com\"\n}"
						}
					]
				},
				{
					"name": "clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/clientes/2",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes",
								"2"
							]
						},
						"description": "### Delete Client\n\nThis endpoint is used to delete a specific client by providing the client's ID in the URL.\n\n#### Request\n\n- Method: DELETE\n    \n- URL: `{{dominio}}/api/clientes/10`\n    \n\n#### Response\n\nThe response of this request is documented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
					},
					"response": [
						{
							"name": "clientes",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/api/clientes/2",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"clientes",
										"2"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Nov 2024 03:45:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "clientes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/clientes",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes"
							]
						}
					},
					"response": [
						{
							"name": "clientes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dominio}}/api/clientes",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"clientes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Nov 2024 03:17:27 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id_cliente\": 1,\n        \"apellidoNombre\": \"Juan PÃ©rez\",\n        \"dni\": \"12345678\",\n        \"fechaNacimiento\": \"1985-04-15T03:00:00.000+00:00\",\n        \"correoElectronico\": \"juan.perez@example.com\"\n    },\n    {\n        \"id_cliente\": 2,\n        \"apellidoNombre\": \"MarÃ­a GarcÃ­a\",\n        \"dni\": \"87654321\",\n        \"fechaNacimiento\": \"1990-08-23T03:00:00.000+00:00\",\n        \"correoElectronico\": \"maria.garcia@example.com\"\n    }\n]"
						}
					]
				},
				{
					"name": "por nombre",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/clientes/nombre/Juan PÃ©rez",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes",
								"nombre",
								"Juan PÃ©rez"
							]
						}
					},
					"response": [
						{
							"name": "por nombre",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{tokenSimple}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{dominio}}/api/clientes/nombre/Juan PÃ©rez",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"clientes",
										"nombre",
										"Juan PÃ©rez"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 12 Nov 2024 01:30:19 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id_cliente\": 1,\n    \"apellidoNombre\": \"Juan PÃ©rez\",\n    \"dni\": \"12345678\",\n    \"fechaNacimiento\": \"1985-04-15T00:00:00.000+00:00\",\n    \"correoElectronico\": \"juan.perez@example.com\"\n}"
						}
					]
				},
				{
					"name": "{{dominio}}/api/clientes/nombre/Juan PÃ©rez",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/clientes/nombre/Juan PÃ©rez",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"clientes",
								"nombre",
								"Juan PÃ©rez"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Productos",
			"item": [
				{
					"name": "productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/productos",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"productos"
							]
						},
						"description": "This is a GET request to retrieve a list of products from the specified endpoint. There is no request body for a GET request, but query parameters can be used to specify the resource to retrieve.\n\n### Example\n\n``` json\n[\n    {\n        \"id_producto\": 0,\n        \"producto\": \"\",\n        \"precio\": 0\n    }\n]\n\n ```\n\nA successful response will have a `200 OK` status and will include an array of product objects, each containing an `id_producto`, `producto`, and `precio`.\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Por ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/productos/1",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"productos",
								"1"
							]
						},
						"description": "### Retrieve Product Details\n\nThis endpoint retrieves the details of a specific product with the ID \"1\".\n\n#### Example\n\n```\nGET {{dominio}}/api/productos/1\nResponse:\n{\n  \"id_producto\": 0,\n  \"producto\": \"\",\n  \"precio\": 0\n}\n\n ```\n\nThe response will be in JSON format and will include the following fields:\n\n- `id_producto` (number): The unique identifier of the product.\n    \n- `producto` (string): The name or description of the product.\n    \n- `precio` (number): The price of the product.\n    \n\n#### JSON Schema\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id_producto\": {\n      \"type\": \"number\"\n    },\n    \"producto\": {\n      \"type\": \"string\"\n    },\n    \"precio\": {\n      \"type\": \"number\"\n    }\n  }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"producto\": \"{{$randomProductName}}\",\n        \"precio\": {{$randomPrice}}\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/productos",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"productos"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "productos (POST)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"id_producto\": 1,\n        \"producto\": \"teclado\",\n        \"precio\": 25030.3\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/api/productos",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"productos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 12 Aug 2024 00:49:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id_producto\": 1,\n    \"producto\": \"teclado\",\n    \"precio\": 25030.3\n}"
						}
					]
				},
				{
					"name": "productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"id_producto\": 1,\n        \"producto\": \"teclado inalambrico\",\n        \"precio\": 35030.3\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/productos/1",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"productos",
								"1"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "productos (PUT)",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"id_producto\": 1,\n        \"producto\": \"teclado inalambrico\",\n        \"precio\": 35030.3\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/api/productos/1",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"productos",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 12 Aug 2024 00:50:09 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"id_producto\": 1,\n    \"producto\": \"teclado inalambrico\",\n    \"precio\": 35030.3\n}"
						}
					]
				},
				{
					"name": "productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{dominio}}/api/productos/2",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"productos",
								"2"
							]
						},
						"description": "### Delete Product\n\nThis endpoint is used to delete a specific product by its identifier.\n\n#### Request\n\n- Method: `DELETE`\n    \n- URL: `{{dominio}}/api/productos/2`\n    \n\n#### Response\n\nThe response for this request is a JSON schema with the following properties:\n\n- `message` (string): A message indicating the result of the delete operation.\n    \n\nExample:\n\n``` json\n{\n    \"message\": \"Product deleted successfully\"\n}\n\n ```"
					},
					"response": [
						{
							"name": "productos (DELETE)",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{dominio}}/productos/2",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"productos",
										"2"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Date",
									"value": "Mon, 12 Aug 2024 00:51:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Api OrdenCompra",
			"item": [
				{
					"name": "OrdenCompra",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/ordenes-compra",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"ordenes-compra"
							]
						},
						"description": "### Get Ordenes de Compra\n\nThis endpoint retrieves a list of purchase orders.\n\n#### Request\n\n- Method: GET\n    \n- URL: `{{dominio}}/api/ordenes-compra`\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- \\[ { \"id_orden\": 0, \"fecha\": \"\", \"cliente\": { \"id_cliente\": 0, \"apellidoNombre\": \"\", \"dni\": \"\", \"fechaNacimiento\": \"\", \"correoElectronico\": \"\", \"contrasena\": \"\" }, \"importe\": 0, \"domicilioEntrega\": \"\", \"horaEntrega\": \"\" }\\]\n    \n\n\\[  \n{  \n\"id_orden\": 0,  \n\"fecha\": \"\",  \n\"cliente\": {  \n\"id_cliente\": 0,  \n\"apellidoNombre\": \"\",  \n\"dni\": \"\",  \n\"fechaNacimiento\": \"\",  \n\"correoElectronico\": \"\",  \n\"contrasena\": \"\"  \n},  \n\"importe\": 0,  \n\"domicilioEntrega\": \"\",  \n\"horaEntrega\": \"\"  \n}  \n\\]"
					},
					"response": [
						{
							"name": "OrdenCompra",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dominio}}/api/ordenes-compra",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"ordenes-compra"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Aug 2024 11:26:21 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id_orden\": 1,\n        \"fecha\": \"2024-08-14T03:00:00.000+00:00\",\n        \"cliente\": {\n            \"id_cliente\": 3,\n            \"apellidoNombre\": \"Kristopher Morar\",\n            \"dni\": \"000\",\n            \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n            \"correoElectronico\": \"Johathan_Satterfield51@gmail.com\",\n            \"contrasena\": \"p4jdvgcMXb_HKGN\"\n        },\n        \"importe\": 1500.5,\n        \"domicilioEntrega\": \"Calle Falsa 123, Buenos Aires\",\n        \"horaEntrega\": \"10:30 AM\"\n    },\n    {\n        \"id_orden\": 2,\n        \"fecha\": \"2024-08-15T03:00:00.000+00:00\",\n        \"cliente\": {\n            \"id_cliente\": 2,\n            \"apellidoNombre\": \"Jasmine Huel\",\n            \"dni\": \"000\",\n            \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n            \"correoElectronico\": \"Rosendo.Metz@gmail.com\",\n            \"contrasena\": \"CtV7W8Chl45wseb\"\n        },\n        \"importe\": 2500.75,\n        \"domicilioEntrega\": \"Avenida Siempre Viva 742, CÃ³rdoba\",\n        \"horaEntrega\": \"12:00 PM\"\n    },\n    {\n        \"id_orden\": 3,\n        \"fecha\": \"2024-08-16T03:00:00.000+00:00\",\n        \"cliente\": {\n            \"id_cliente\": 3,\n            \"apellidoNombre\": \"Kristopher Morar\",\n            \"dni\": \"000\",\n            \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n            \"correoElectronico\": \"Johathan_Satterfield51@gmail.com\",\n            \"contrasena\": \"p4jdvgcMXb_HKGN\"\n        },\n        \"importe\": 3200.2,\n        \"domicilioEntrega\": \"Calle Real 456, Mendoza\",\n        \"horaEntrega\": \"02:30 PM\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Api DetalleCompra",
			"item": [
				{
					"name": "DetalleCompra",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{dominio}}/api/detalles-compra",
							"host": [
								"{{dominio}}"
							],
							"path": [
								"api",
								"detalles-compra"
							]
						},
						"description": "### GET /api/detalles-compra\n\nThis endpoint retrieves details of a purchase.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be a JSON array containing objects with the following properties:\n\n- `id_detalle` (number): The ID of the purchase detail.\n    \n- `orden` (object): Details of the order including order ID, date, customer information, amount, delivery address, and delivery time.\n    \n    - `id_orden` (number): The ID of the order.\n        \n    - `fecha` (string): The date of the order.\n        \n    - `cliente` (object): Information about the customer.\n        \n        - `id_cliente` (number): The ID of the customer.\n            \n        - `apellidoNombre` (string): The name of the customer.\n            \n        - `dni` (string): The DNI of the customer.\n            \n        - `fechaNacimiento` (string): The date of birth of the customer.\n            \n        - `correoElectronico` (string): The email address of the customer.\n            \n        - `contrasena` (string): The password of the customer.\n            \n    - `importe` (number): The amount of the order.\n        \n    - `domicilioEntrega` (string): The delivery address.\n        \n    - `horaEntrega` (string): The delivery time.\n        \n- `producto` (object): Information about the product in the order.\n    \n    - `id_producto` (number): The ID of the product.\n        \n    - `producto` (string): The name of the product.\n        \n    - `precio` (number): The price of the product.\n        \n- `precio` (number): The price of the purchase detail.\n    \n- `cantidadPedida` (number): The quantity of the product ordered.\n    \n- `importe` (number): The total amount for the purchase detail.\n    \n\n#### JSON Schema\n\n``` json\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id_detalle\": { \"type\": \"number\" },\n      \"orden\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id_orden\": { \"type\": \"number\" },\n          \"fecha\": { \"type\": \"string\" },\n          \"cliente\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id_cliente\": { \"type\": \"number\" },\n              \"apellidoNombre\": { \"type\": \"string\" },\n              \"dni\": { \"type\": \"string\" },\n              \"fechaNacimiento\": { \"type\": \"string\" },\n              \"correoElectronico\": { \"type\": \"string\" },\n              \"contrasena\": { \"type\": \"string\" }\n            }\n          },\n          \"importe\": { \"type\": \"number\" },\n          \"domicilioEntrega\": { \"type\": \"string\" },\n          \"horaEntrega\": { \"type\": \"string\" }\n        }\n      },\n      \"producto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id_producto\": { \"type\": \"number\" },\n          \"producto\": { \"type\": \"string\" },\n          \"precio\": { \"type\": \"number\" }\n        }\n      },\n      \"precio\": { \"type\": \"number\" },\n      \"cantidadPedida\": { \"type\": \"number\" },\n      \"importe\": { \"type\": \"number\" }\n    }\n  }\n}\n\n ```"
					},
					"response": [
						{
							"name": "DetalleCompra",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{dominio}}/api/detalles-compra",
									"host": [
										"{{dominio}}"
									],
									"path": [
										"api",
										"detalles-compra"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Aug 2024 11:32:00 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id_detalle\": 1,\n        \"orden\": {\n            \"id_orden\": 1,\n            \"fecha\": \"2024-08-14T03:00:00.000+00:00\",\n            \"cliente\": {\n                \"id_cliente\": 6,\n                \"apellidoNombre\": \"Norman Jacobi III\",\n                \"dni\": \"000\",\n                \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n                \"correoElectronico\": \"Jewell7@yahoo.com\",\n                \"contrasena\": \"qC6J6Qxg0PND4pC\"\n            },\n            \"importe\": 800.5,\n            \"domicilioEntrega\": \"Calle Falsa 123, Buenos Aires\",\n            \"horaEntrega\": \"10:30 AM\"\n        },\n        \"producto\": {\n            \"id_producto\": 2,\n            \"producto\": \"Incredible Frozen Bacon\",\n            \"precio\": 158.19\n        },\n        \"precio\": 100,\n        \"cantidadPedida\": 3,\n        \"importe\": 300\n    },\n    {\n        \"id_detalle\": 2,\n        \"orden\": {\n            \"id_orden\": 2,\n            \"fecha\": \"2024-08-15T03:00:00.000+00:00\",\n            \"cliente\": {\n                \"id_cliente\": 2,\n                \"apellidoNombre\": \"Jasmine Huel\",\n                \"dni\": \"000\",\n                \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n                \"correoElectronico\": \"Rosendo.Metz@gmail.com\",\n                \"contrasena\": \"CtV7W8Chl45wseb\"\n            },\n            \"importe\": 2500.75,\n            \"domicilioEntrega\": \"Avenida Siempre Viva 742, CÃ³rdoba\",\n            \"horaEntrega\": \"12:00 PM\"\n        },\n        \"producto\": {\n            \"id_producto\": 3,\n            \"producto\": \"Fantastic Wooden Cheese\",\n            \"precio\": 916.4\n        },\n        \"precio\": 50,\n        \"cantidadPedida\": 5,\n        \"importe\": 250\n    },\n    {\n        \"id_detalle\": 3,\n        \"orden\": {\n            \"id_orden\": 3,\n            \"fecha\": \"2024-08-16T03:00:00.000+00:00\",\n            \"cliente\": {\n                \"id_cliente\": 3,\n                \"apellidoNombre\": \"Kristopher Morar\",\n                \"dni\": \"000\",\n                \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n                \"correoElectronico\": \"Johathan_Satterfield51@gmail.com\",\n                \"contrasena\": \"p4jdvgcMXb_HKGN\"\n            },\n            \"importe\": 3200.2,\n            \"domicilioEntrega\": \"Calle Real 456, Mendoza\",\n            \"horaEntrega\": \"02:30 PM\"\n        },\n        \"producto\": {\n            \"id_producto\": 1,\n            \"producto\": \"teclado inalambrico\",\n            \"precio\": 35030.3\n        },\n        \"precio\": 75,\n        \"cantidadPedida\": 2,\n        \"importe\": 150\n    },\n    {\n        \"id_detalle\": 4,\n        \"orden\": {\n            \"id_orden\": 1,\n            \"fecha\": \"2024-08-14T03:00:00.000+00:00\",\n            \"cliente\": {\n                \"id_cliente\": 6,\n                \"apellidoNombre\": \"Norman Jacobi III\",\n                \"dni\": \"000\",\n                \"fechaNacimiento\": \"1990-01-01T00:00:00.000+00:00\",\n                \"correoElectronico\": \"Jewell7@yahoo.com\",\n                \"contrasena\": \"qC6J6Qxg0PND4pC\"\n            },\n            \"importe\": 800.5,\n            \"domicilioEntrega\": \"Calle Falsa 123, Buenos Aires\",\n            \"horaEntrega\": \"10:30 AM\"\n        },\n        \"producto\": {\n            \"id_producto\": 3,\n            \"producto\": \"Fantastic Wooden Cheese\",\n            \"precio\": 916.4\n        },\n        \"precio\": 100,\n        \"cantidadPedida\": 3,\n        \"importe\": 300\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "API Login",
			"item": [
				{
					"name": "User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "SimpleToken 3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"jean\",\r\n    \"password\": \"12345\",\r\n    \"token\": \"3438a74c821a8d3fd0505a24ef4f19279abeb0f48cd367db41599e8581b3e45d\",\r\n    \"id\": 3,\r\n    \"roll\": \"ROLE_ADMIN\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/token/user",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"token",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "User",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "SimpleToken mySecretKey",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"jean\",\r\n    \"password\": \"12345\",\r\n    \"token\": \"jean\",\r\n    \"id\": 3,\r\n    \"roll\": \"ROLE_ADMIN\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/token/user",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"token",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 11 Nov 2024 02:32:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"username\": \"jean\",\n    \"password\": \"12345\",\n    \"token\": \"jean\",\n    \"id\": 3,\n    \"roll\": \"ROLE_ADMIN\"\n}"
						}
					]
				},
				{
					"name": "Crear JWT",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenSimple}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"jean\",\r\n    \"password\": \"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}